FROM --platform=linux/amd64 node:18-slim

# Install basic build dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    curl \
    git \
    pkg-config \
    libudev-dev \
    libssl-dev \
    python3-pip \
    && ln -s /usr/bin/python3 /usr/bin/python \
    && rm -rf /var/lib/apt/lists/*

# Install Rust and set as default
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN rustup default stable

# Install Solana CLI and cargo-build-sbf
RUN sh -c "$(curl -sSfL https://release.solana.com/v1.16.13/install)" && \
    /root/.local/share/solana/install/active_release/bin/cargo-build-sbf --version
ENV PATH="/root/.local/share/solana/install/active_release/bin:${PATH}"

WORKDIR /workspace

# Pre-install common dependencies
RUN mkdir -p /workspace/program && \
    cd /workspace/program && \
    cargo init && \
    echo '[package]\nname = "prebuilt-deps"\nversion = "0.1.0"\nedition = "2021"\n\n[dependencies]\nsolana-program = "1.16.13"\nborsh = "0.10.3"\nthiserror = "1.0"' > Cargo.toml && \
    cargo fetch

# Clean up unnecessary files but keep the registry cache
RUN rm -rf /workspace/program

# Copy package files
COPY package*.json ./

# Install dependencies and generate package-lock.json
RUN npm install && \
    npm install -g typescript

# Copy source code
COPY . .

# Build TypeScript code
RUN npm run build

# Expose port
EXPOSE 8080

# Start the server
CMD ["npm", "start"]